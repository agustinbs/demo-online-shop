<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>edge-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>event-sourcing/edge-service</name>

    <parent>
        <groupId>org.kbastani</groupId>
        <artifactId>event-sourcing</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
	    <!-- Docker & Fabric8 Configs -->
    	<fabric8.version>2.2.135</fabric8.version>
    	<docker.maven.plugin.version>0.15.7</docker.maven.plugin.version>
    	<fabric8.dockerUser>fabric8/</fabric8.dockerUser>
    	<docker.from>fabric8/java-jboss-openjdk8-jdk:1.0.13</docker.from>
    	<docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
    	
    	<docker.port.container.jolokia>8778</docker.port.container.jolokia>

	    <fabric8.service.name>${project.artifactId}</fabric8.service.name>
	    <fabric8.service.port>80</fabric8.service.port>
	    <fabric8.service.containerPort>9999</fabric8.service.containerPort>
	    <fabric8.service.type>LoadBalancer</fabric8.service.type>

	    <!-- fabric8.readinessProbe.httpGet.port>8080</fabric8.readinessProbe.httpGet.port>
	    <fabric8.readinessProbe.httpGet.path>/</fabric8.readinessProbe.httpGet.path>
	    <fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
	    <fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds-->
	    <fabric8.label.group>apigateway</fabric8.label.group>
	    <fabric8.iconRef>spring-boot-apigateway</fabric8.iconRef>        
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <!-- sleuth stream for zipkin integration -->
		<!-- dependency>
       		<groupId>org.springframework.cloud</groupId>
       		<artifactId>spring-cloud-sleuth-stream</artifactId>
   		</dependency-->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
   	    </dependency>
   	    <!-- rabbit stream for zipkin integration -->
	    <!-- dependency>
       		<groupId>org.springframework.cloud</groupId>
       		<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
   		</dependency-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <!-- dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zuul</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>
        <!-- dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency-->
    </dependencies>

    <build>
		<plugins>
			<!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- version>3.3</version -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- version>2.18.1</version -->
				<inherited>true</inherited>
				<configuration>
					<argLine>-Djava.security.egd=file:/dev/./urandom</argLine>
					<excludes>
						<exclude>**/*KT.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>demo.EdgeApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>json</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>json</goal>
						</goals>
					</execution>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/app</basedir>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<env>
									<JAVA_APP_JAR>${project.build.finalName}.jar</JAVA_APP_JAR>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Default sample commands: 
		mvn -Pf8-build ... build Docker images and 	create OpenShift deployment configs 		
		mvn -Pf8-deploy ... f8-build + push to 	Docker registry + applying deployment config to OpenShift 		
		mvn -Pf8-local-deploy ... deployment for a single node setup without pushing to a registry For 
		individual goal usage please consult the fabric8 documentation -->
		
	<profiles>
		<profile>
			<id>f8-build</id>
			<properties>
				<fabric8.env.SPRING_PROFILES_ACTIVE>cloud</fabric8.env.SPRING_PROFILES_ACTIVE>				
			</properties>
			<build>
				<defaultGoal>clean install docker:build fabric8:json</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-deploy</id>
			<properties>
				<fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
			<build>
				<defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-local-deploy</id>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
				<fabric8.env.SPRING_PROFILES_ACTIVE>cloud</fabric8.env.SPRING_PROFILES_ACTIVE>	
			</properties>
			<build>
				<defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
	</profiles>    
</project>